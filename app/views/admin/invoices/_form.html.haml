.row
  .col-md-12
    .page-header
      %h1
        = @invoice.new_record? ? 'New invoice' : 'Edit Invoice'

      .text-muted
        - if @payment
          = link_to "for payment", admin_conference_payment_path(@conference, @payment)
          (status:
          %span{ style: 'color: white', class: "#{@payment.success? ? 'label-success' : 'label-danger'}" }
            = @payment.status
          )

        - if @user && @user.invoices.for_conference(@conference).any?
          User has
          = link_to pluralize(@user.invoices.for_conference(@conference).length, 'invoice'), admin_user_path(@user)


= semantic_form_for @invoice, url: @url do |f|
  - if @payment
    = f.hidden_field :payment_id, value: @payment.id
  .row
    .col-md-2
      = f.input :kind, selected: @invoice.kind, input_html: { collection: Invoice::kinds }
    .col-md-2
      = f.input :currency, selected: @invoice.currency || 'EUR', collection: ENV['OSEM_DEFAULT_CURRENCIES'].split(' ')
    .col-md-1
      = f.input :exchange_rate
    .col-md-1.col-md-offset-1
      = f.label :paid
      = f.input :paid, label: ''
    .col-md-2
      = f.input :no
    .col-md-2
      = f.input :date, as: :string, input_html: { id: 'datepicker-invoice', readonly: 'readonly' }

  .row
    = f.inputs 'Invoice Details' do
      .col-md-8
        - if @invoice.kind == 'ticket_purchase'
          = f.input :ticket_purchases, as: :select, label: 'Tickets', collection: @tickets_collection || [], input_html: { multiple: true, size: @tickets_collection&.length }, selected: @tickets_selected&.map{ |x| x[:ticket_purchase_ids].split.join(', ') }

        #description
          %table.table
            %tr
              %th.text-center.col-md-3 Description
              %th.text-center.col-md-1 Quantity
              %th.text-center.col-md-2 Price
              %th.text-center.col-md-2 Vat %
              %th.text-center.col-md-2 Vat
              %th.text-center.col-md-1 Vat (NOK)
              %th

          - if @invoice.persisted? && @invoice.description.present?
            - @invoice.description.each do |item|

              - item_match = @tickets_collection.select{ |data| data.third[:data][:ticket_name] == item[:description] && data.third[:data][:quantity].to_s == item[:quantity] && data.third[:data][:price].to_s == item[:price] } if @tickets_collection&.any?

              - index = item_match.first.third[:data][:index] if item_match&.any?
              = render partial: 'invoice_items', locals: { item: item, index: index }
          - else
            - if @tickets_grouped
              - @tickets_grouped.each.with_index(1) do |item, index|
                - item[:description] = item[:ticket].title
                - item[:ticket_id] = item[:ticket].id
                = render partial: 'invoice_items', locals: { item: item, index: index }
            - else
              = render partial: 'invoice_items', locals: { item: nil }

            -# - if @payment && @payment.overall_discount && @payment.overall_discount > 0
            -# - if @overall_discount && @overall_discount > 0
            -#   = render partial: 'invoice_items', locals: { item: { description: 'Discount', quantity: '1', price: -@overall_discount } }


        %br
        = link_to 'Add item', admin_conference_invoices_add_item_path(@conference), remote: true
        %br
      .col-md-4
        - collection_items = []

        %div#invoice-recipient{ 'data-class' => @invoice.recipient.try(:class) || 'User' }
        - if @invoice.recipient_type == 'Sponsor'
          - collection_items = @conference.sponsors.map{ |sponsor| ["#{sponsor.name} (#{sponsor.email}) - #{sponsor.sponsorship_level.title}", sponsor.id] }

          = f.input :recipient, as: :select, include_blank: 'Please Select',
                                collection: collection_items, multiple: false,
                                selected: @invoice.recipient&.id
        - else
          - collection_items = User.active.sort_by { |user| user.name.downcase }.map { |user| ["#{user.name} (#{user.email})", user.id, data: { invoice_details: user.invoice_details } ]}

          = f.input :recipient, as: :select,
                                collection: collection_items, selected: @invoice.recipient&.id,
                                include_blank: 'Please Select'

        %input{ name: 'invoice[recipient_type]', type: 'hidden', value: @invoice.recipient_type }

        ~ f.input :recipient_details, input_html: { value: @invoice.recipient_details, rows: 5, data: { provide: 'markdown-editable' } }, hint: markdown_hint

        = f.input :recipient_vat
  .row
    %hr
    .col-md-2
      = f.input :total_amount, value: @invoice.total_amount

    .col-md-2
      - hint = @invoice.recipient.try(:invoice_vat).present? ? '' : 'No VAT number was supplied!'
      = f.input :vat, hint: hint

      .col-md-6
        #vat_nok
          = number_with_precision(@invoice.vat * @invoice.exchange_rate, precision: 2)

      .col-md-6.pull-left
        NOK
    .col-md-2
      = f.input :payable, input_html: { autofocus: true }
      - if @payment && (@payment.amount != (@invoice.payable * 100))
        %p The amount is different than the payment amount (#{@payment.amount / 100.0})!
  .row
    .col-md-12
      = f.submit 'Save', class: 'btn btn-primary pull-right'

:javascript
  $(document).ready(function() {
    $('#invoice_recipient_id').selectize({
      plugins: ['remove_button'],
      maxItems: 1
    } );
    payable_change(0);
  });

  $('#invoice_recipient_id').change(function() {
    var recipient_class = $('#invoice-recipient').data('class');
    var conference = "#{@conference.short_title}";

    $('#invoice_recipient_id option:selected').each(function(){
      var id = $(this).val();
      $.ajax({
        url: '/invoice_info',
        method: 'GET',
        dataType: 'script',
        data: { model: recipient_class, id: id, conference_id: conference }
      });
    });
  });
