.row
  .col-md-12
    .page-header
      %h1
        Registrations
        = "(#{@registrations.length})" if @registrations
        .btn-group.pull-right
          - if can? :read, Registration
            = link_to 'Export CSV', { format: :csv }, class: 'btn btn-success'
            = link_to 'Export PDF', { format: :pdf }, class: 'btn btn-success'
            = link_to 'Export XLS', { format: :xlsx }, class: 'btn btn-success'
      %p.text-muted
        All the people who registered to your event
  .col-md-4
    = render 'donut_chart', title: 'Affiliation',
      combined_data: @affiliation_distribution
  - unless @conference.pending?
    .col-md-4
      = render 'donut_chart', title: 'Attended registrations',
        combined_data: @registration_distribution
    .col-md-4
      = render 'donut_chart', title: 'Users with Coupons', combined_data: @coupon_distribution
.row
  .col-md-12
    %div.margin-event-table
      %table.datatable#registrations{ data: { source: admin_conference_registrations_path(conference_id: @conference, format: :json) } }
        %thead
          %tr
            %th{ width: '0' } ID#
            %th{ width: '25%' } Name
            %th{ width: '0' } Roles
            %th{ width: '0' } E-Mail
            %th Codes Applied
            - if @code_of_conduct
              %th{ width: '0' }
                %abbr{ title: 'Code of Conduct' } CoC
            %th{ width: '0' } Actions
        %tbody
          - @registrations.each_with_index do |registration, index|
            %tr
              %td
                = registration.id
              %td
                - name = registration.name.present? ? registration.name : registration.username
                = link_to name, admin_user_path(registration.user)
                %br
                - registration.user.roles.where(resource: @conference).each do |role|
                  %span.label.label-info
                    = role.name.titleize
              %td
                = registration.email
              %td= registration.coupons.pluck(:name).sort.join('<br>').html_safe
              - if @code_of_conduct
                - if registration.accepted_code_of_conduct
                  %td.text-success.text-center= fa_icon('check', title: 'accepted')
                - else
                  %td.text-center.text-warning
                    = fa_icon('exclamation-circle',
                      title: 'Has not accepted Code of Conduct')
              %td{ 'data-order' => registration.attended.to_s }
                = check_box_tag "#{@conference.short_title}_#{registration.id}", registration.id, registration.attended,
                  class: 'switch-checkbox',
                  url: toggle_attendance_admin_conference_registration_path(@conference.short_title, id: registration.id)+"?attended="
                .btn-group
                  = link_to 'Edit', edit_admin_conference_registration_path(@conference.short_title, id: registration),
                  method: :get, class: 'btn btn-primary'
                  = link_to 'Delete', admin_conference_registration_path(@conference.short_title, registration),
                  method: :delete, class: 'btn btn-danger', data: { confirm: "Do you really want to delete the Registration for #{registration.name}?" }
                  = link_to 'Invoice', new_admin_conference_invoice_path(@conference, user_id: registration.user), class: 'btn btn-warning'


:javascript
  $(function () {
    var codeOfConductPresent = #{@code_of_conduct ? 'true' : 'false'};
    var registrationsDataTable = $('#registrations.datatable').DataTable({
      "processing": true,
      "serverSide": true,
      "ajax": $('#registrations.datatable').data('source'),
      "drawCallback": function(settings) {
        checkboxSwitch("[class='switch-checkbox']");
        if (codeOfConductPresent) {
          iconize("td.code-of-conduct", "true", "check", "accepted");
          iconize("td.code-of-conduct", "false", "exclamation-circle", "Has not accepted Code of Conduct");
        };
        // truncatify("td.truncate");
      },
      "columns": [
        {
          "data": "id"
        },
        {
          "data": "name",
          "className": "truncate",
          "render": function(data, type, row) {
            var content = '<span data-toggle="tooltip" title="' + data + '">' + data + '</span><br/>';
            $.each(row.roles, function(index, role){
              content += ' <span class="label label-info">' + role + '</span>'
            });
            return content;
          }
        },
        {
          "name": "roles",
          "data": "roles",
          "className": "truncate",
          "render": function(data, type, row) {
            return data.join(', ');
          }
        },
        {
          "data": "email"
        },
        {
          "data": "accepted_code_of_conduct",
          "className": "code-of-conduct text-center",
          "searchable": false
        },
        {
          "data": null,
          "className": "actions",
          "searchable": false,
          "sortable": false,
          "render":    function (data, type, row, meta) {
            return '<div class="btn-group">'+
                   '<a class="btn-primary" href="'+data.edit_url+'">Edit</a>'+
                   '</div>';
          }
        }
      ]
    });

    registrationsDataTable.columns(3).visible(codeOfConductPresent);
    registrationsDataTable.columns(2).visible(false);
  });
