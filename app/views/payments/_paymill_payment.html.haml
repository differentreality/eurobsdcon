.row
  .col-md-12
    %button.btn.btn-primary.pull-right{ 'data-toggle': 'modal', 'data-target': '#paymill_form' }
      Pay #{humanized_money_with_symbol @total_amount_to_pay}

    = link_to 'Edit Purchase', conference_tickets_path(@conference.short_title, show_unpaid_ticket_purchases: true, payment_id: @payment), class: 'btn btn-default pull-left'

    .modal.fade#paymill_form{ tabindex: -1, role: 'dialog', 'aria-labelledby':'myModalLabel' }
      .modal-dialog.modal-default.modal-sm{ role: 'document' }
        .modal-content
          .modal-header
            %button.btn.default.close{ type: 'button', 'data-dismiss': 'modal', 'aria-label': 'Close' }
              .fa.fa-times
            %div

              %h5.modal-title.text-center
                %b= @conference.title
                %br
                Book your tickets
                %br
                = current_user.email
          .modal-body
            = semantic_form_for 'payment', url: @url, html: { class: 'payment-form', id: 'payment-form' } do
              = text_field_tag 'payment[amount]', @total_amount_to_pay.cents.to_s, hidden: true
              = text_field_tag 'payment[overall_discount]', overall_discount, hidden: true
              #credit-card-fields

              %br
              %button.btn.btn-primary{ type: 'submit', style: 'width: 100%' }
                Pay #{humanized_money_with_symbol @total_amount_to_pay}


:javascript
  PAYMILL_PUBLIC_KEY = "#{ENV['PAYMILL_PUBLIC_API_KEY']}";
  // Callback for the PayFrame
  var payFrameCallback = function (error) {
    if (error) {
      // Frame could not be loaded, check error object for reason.
      console.log(error.apierror, error.message);
    } else {
      // Frame was loaded successfully and is ready to be used.
      console.log("PayFrame successfully loaded");
      $("#payment-form").show(300);
    }
  }

  var submit = function (event) {
    var amount_int = #{@total_amount_to_pay.cents};
    var currency = "#{@total_amount_to_pay.currency}";

    paymill.createTokenViaFrame({
      amount_int: amount_int,
      currency: currency
    }, function(error, result) {

      // Handle error or process result.
      if (error) {
        // Token could not be created, check error object for reason.
        console.log(error.apierror, error.message);
      } else {
        // Token was created successfully and can be sent to backend.
        var form = $("#payment-form");
        var token = result.token;

        form.append("<input type='hidden' name='token' value='" + token + "'/>");
        form.get(0).submit();
      }
    });

    return false;
  }

  $(document).ready(function () {
    paymill.embedFrame('credit-card-fields', {
      lang: 'en'
    }, payFrameCallback);

    // Form submit handler
    $("#payment-form").submit(submit);
  });
